import pandas as pd
import re
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
import joblib
from flask import Flask, request, render_template_string

# Load dataset
df = pd.read_csv('dataset_full.csv')

# Assume last column is label
label_col = df.columns[-1]

X = df.drop(columns=[label_col])
y = df[label_col]

# Train model
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

joblib.dump(model, 'model.pkl')
model = joblib.load('model.pkl')

# Feature extractor
def extract_features(url):
    return pd.DataFrame([{
        'URL_Length': len(url),
        'having_At_Symbol': 1 if '@' in url else 0,
        'double_slash_redirecting': 1 if '//' in url[7:] else 0,
        'Prefix_Suffix': 1 if '-' in url else 0,
        'having_IP_Address': 1 if re.match(r"(http[s]?://)?\d+\.\d+\.\d+\.\d+", url) else 0
    }])

# Flask app
app = Flask(__name__)

html = '''
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>WEB PHISH GAURD</title>
    <style>
        body {
            background: linear-gradient(135deg, #1f4037, #99f2c8);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }
        .container {
            background: white;
            padding: 40px;
            border-radius: 12px;
            box-shadow: 0 8px 20px rgba(0,0,0,0.3);
            max-width: 500px;
            width: 90%;
        }
        h1 {
            color: #1f4037;
            margin-bottom: 20px;
        }
        input[type="text"] {
            width: 100%;
            padding: 12px;
            border: 1px solid #ccc;
            border-radius: 6px;
            font-size: 16px;
        }
        button {
            margin-top: 20px;
            padding: 12px 20px;
            font-size: 16px;
            background: #1f4037;
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            transition: background 0.3s ease;
        }
        button:hover {
            background: #163529;
        }
        .result {
            margin-top: 20px;
            font-size: 1.2em;
            color: #333;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Phishing URL Detector</h1>
        <form method="post">
            <input type="text" name="url" placeholder="Enter a URL (simulated check)" required>
            <button type="submit">Check URL</button>
        </form>
        <div class="result">
            {{ result|safe }}
        </div>
    </div>
</body>
</html>
'''
...

@app.route('/', methods=['GET', 'POST'])
def index():
    result = ''
    if request.method == 'POST':
        import random
        i = random.randint(0, len(X_test)-1)
        sample = X_test.iloc[[i]]
        pred = model.predict(sample)[0]
        if pred == 1:
            result = "ðŸš¨ This is likely a *phishing site*."
        else:
            result = "âœ… This is likely *legitimate*."
    return render_template_string(html, result=result)

if __name__ == '__main__':
    app.run(debug=True)


